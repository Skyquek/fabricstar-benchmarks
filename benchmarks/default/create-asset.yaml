test:
  name: create-asset
  description: >-
    This is a duration based benchmark targeting a Hyperledger Fabric network
    using the `fixed-asset` NodeJS chaincode
    contract that is interacted with via a Fabric-SDK-Node Gateway. Each test
    round invokes the `createAsset` method, with successive rounds increasing
    the byteSize of the asset added into the world state database.
  workers:
    type: local
    number: 5
  rounds:
    # - label: create-asset-100
    #   description: >-
    #     Test a submitTransaction() Gateway method against the NodeJS
    #     `fixed-asset` Smart Contract method named `createAsset`, which inserts
    #     an asset of size 100 bytes into the World State database.
    #   chaincodeID: fixed-asset
    #   txDuration: 300
    #   rateControl:
    #     type: fixed-load
    #     opts:
    #       transactionLoad: 1000
    #   workload:
    #     module: benchmarks/lib/create-asset.js
    #     arguments:
    #       chaincodeID: fixed-asset
    #       byteSize: 400
    # - label: create-asset-2000
    #   description: >-
    #     Test a submitTransaction() Gateway method against the NodeJS
    #     `fixed-asset` Smart Contract method named `createAsset`, which inserts
    #     an asset of size 2000 bytes into the World State database.
    #   chaincodeID: fixed-asset
    #   txDuration: 300
    #   rateControl:
    #     type: fixed-load
    #     opts:
    #       transactionLoad: 300
    #   workload:
    #     module: benchmarks/lib/create-asset.js
    #     arguments:
    #       chaincodeID: fixed-asset
    #       byteSize: 2000
    # - label: create-asset-4000
    #   description: >-
    #     Test a submitTransaction() Gateway method against the NodeJS
    #     `fixed-asset` Smart Contract method named `createAsset`, which inserts
    #     an asset of size 4000 bytes into the World State database.
    #   chaincodeID: fixed-asset
    #   txDuration: 300
    #   rateControl:
    #     type: fixed-load
    #     opts:
    #       transactionLoad: 200
    #   workload:
    #     module: benchmarks/lib/create-asset.js
    #     arguments:
    #       chaincodeID: fixed-asset
    #       byteSize: 4000
    # - label: create-asset-8000
    #   description: >-
    #     Test a submitTransaction() Gateway method against the NodeJS
    #     `fixed-asset` Smart Contract method named `createAsset`, which inserts
    #     an asset of size 8000 bytes into the World State database.
    #   chaincodeID: fixed-asset
    #   txDuration: 300
    #   rateControl:
    #     type: fixed-load
    #     opts:
    #       transactionLoad: 150
    #   workload:
    #     module: benchmarks/lib/create-asset.js
    #     arguments:
    #       chaincodeID: fixed-asset
    #       byteSize: 8000
    # - label: create-asset-16000
    #   description: >-
    #     Test a submitTransaction() Gateway method against the NodeJS
    #     `fixed-asset` Smart Contract method named `createAsset`, which inserts
    #     an asset of size 16000 bytes into the World State database.
    #   chaincodeID: fixed-asset
    #   txDuration: 300
    #   rateControl:
    #     type: fixed-load
    #     opts:
    #       transactionLoad: 100
    #   workload:
    #     module: benchmarks/lib/create-asset.js
    #     arguments:
    #       chaincodeID: fixed-asset
    #       byteSize: 16000
    - label: create-asset-32000
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 32000 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 50
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 32000
    - label: create-asset-64000
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 64000 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 50
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 64000
monitors:
    - none

