test:
  name: create-asset-batch
  description: >-
    This is a duration based benchmark targeting a Hyperledger Fabric network
    database using the `fixed-asset` NodeJS chaincode
    contract that is interacted with via a Fabric-SDK-Node Gateway. Each test
    round invokes the `createAssetsFromBatch` method, with successive rounds
    increasing the batch size of the assets being added into the world state
    database.
  workers:
    type: local
    number: 40
  rounds:
    - label: create-asset-batch-20-8000-fixed-tps
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAssetsFromBatch`, which
        inserts a batch of 20 assets of size 8k bytes into the World State
        database at a fixed TPS.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-rate
        opts:
          tps: 5
      workload:
        module: benchmarks/lib/batch-create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 8000
          batchSize: 20
    - label: create-asset-batch-1-8000
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAssetsFromBatch`, which
        inserts a batch of 1 assets of size 8k bytes into the World State
        database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 5
      workload:
        module: benchmarks/lib/batch-create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 8000
          batchSize: 1
    - label: create-asset-batch-10-8000
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAssetsFromBatch`, which
        inserts a batch of 10 assets of size 8k bytes into the World State
        database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 5
      workload:
        module: benchmarks/lib/batch-create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 8000
          batchSize: 10
    - label: create-asset-batch-20-8000
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAssetsFromBatch`, which
        inserts a batch of 20 assets of size 8k bytes into the World State
        database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 5
      workload:
        module: benchmarks/lib/batch-create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 8000
          batchSize: 20
    - label: create-asset-batch-30-8000
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAssetsFromBatch`, which
        inserts a batch of 30 assets of size 8k bytes into the World State
        database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 5
      workload:
        module: benchmarks/lib/batch-create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 8000
          batchSize: 30
    - label: create-asset-batch-40-8000
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAssetsFromBatch`, which
        inserts a batch of 40 assets of size 8k bytes into the World State
        database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 5
      workload:
        module: benchmarks/lib/batch-create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 8000
          batchSize: 40
    - label: create-asset-batch-50-8000
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAssetsFromBatch`, which
        inserts a batch of 50 assets of size 8k bytes into the World State
        database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 5
      workload:
        module: benchmarks/lib/batch-create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 8000
          batchSize: 50
monitors:
  - none