test:
  name: create-asset
  description: >-
    This is a duration based benchmark targeting a Hyperledger Fabric network
    using the `fixed-asset` NodeJS chaincode
    contract that is interacted with via a Fabric-SDK-Node Gateway. Each test
    round invokes the `createAsset` method, with successive rounds increasing
    the byteSize of the asset added into the world state database.
  workers:
    type: local
    number: 20
  rounds:   
    - label: create-asset-rate-100-800
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-rate
        opts:
          tps: 800
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 100     
    - label: create-asset-rate-100-900
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-rate
        opts:
          tps: 900
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 100    
    - label: create-asset-rate-100-1000
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-rate
        opts:
          tps: 1000
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 100     


    - label: create-asset-rate-1000-700
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-rate
        opts:
          tps: 700
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 1000   
    - label: create-asset-rate-1000-750
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-rate
        opts:
          tps: 750
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 1000           
    - label: create-asset-rate-1000-800
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-rate
        opts:
          tps: 800
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 1000 

    - label: create-asset-rate-2000-500
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-rate
        opts:
          tps: 500
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 2000     
    - label: create-asset-rate-2000-550
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-rate
        opts:
          tps: 550
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 2000   
    - label: create-asset-rate-2000-600
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-rate
        opts:
          tps: 600
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 2000   
 

    - label: create-asset-rate-4000-350
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-rate
        opts:
          tps: 350
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 4000
    - label: create-asset-rate-4000-400
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-rate
        opts:
          tps: 400
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 4000   
    - label: create-asset-rate-4000-450
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-rate
        opts:
          tps: 450
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 4000            


    - label: create-asset-rate-8000-200
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-rate
        opts:
          tps: 200
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 8000       
    - label: create-asset-rate-8000-250
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-rate
        opts:
          tps: 250
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 8000
    - label: create-asset-rate-8000-300
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-rate
        opts:
          tps: 300
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 8000      


    - label: create-asset-rate-16000-100
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-rate
        opts:
          tps: 100
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 16000     
    - label: create-asset-rate-16000-150
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-rate
        opts:
          tps: 150
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 16000    
    - label: create-asset-rate-16000-200
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-rate
        opts:
          tps: 200
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 16000                                                                                                                                                                                                                                                                                                                                 
                                                                                                                                 
monitors:
    - none

