test:
  name: create-asset
  description: >-
    This is a duration based benchmark targeting a Hyperledger Fabric network
    using the `fixed-asset` NodeJS chaincode
    contract that is interacted with via a Fabric-SDK-Node Gateway. Each test
    round invokes the `createAsset` method, with successive rounds increasing
    the byteSize of the asset added into the world state database.
  workers:
    type: local
    number: 64
  rounds:   
    - label: create-asset-load-1500
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 1500
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 100 
    - label: create-asset-load-600
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 600
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 100    
    - label: create-asset-load-900
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 900
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 100    
    - label: create-asset-load-1200
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 1200
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 100        
    - label: create-asset-load-1500
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 1500
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 100  
    - label: create-asset-load-1800
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 1800
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 100 
    - label: create-asset-load-2100
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 2100
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 100   
    - label: create-asset-load-2400
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 2400
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 100     
    - label: create-asset-load-2700
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 2700
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 100   
    - label: create-asset-load-3000
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `fixed-asset` Smart Contract method named `createAsset`, which inserts
        an asset of size 100 bytes into the World State database.
      chaincodeID: fixed-asset
      txDuration: 300
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 3000
      workload:
        module: benchmarks/lib/create-asset.js
        arguments:
          chaincodeID: fixed-asset
          byteSize: 100                                                
                                       
                                                                                                             
                                                                                 
                                                                                                                                 
monitors:
    - none

