---
test:
  name: create-asset-size-ramp-levelDB
  description: This is a duration based benchmark targeting a Hyperledger Fabric network with a LevelDB world state database using the `fixed-asset` NodeJS chaincode contract that is interacted with via
    a Fabric-SDK-Node Gateway. Each test round invokes the `createAsset` method, with successive rounds increasing the bytesize of the asset
    added into the world state database.
  workers:
    type: local
    number: 4
  rounds:
  - label: create-asset-200tps-100b
    description: Test a submitTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `createAsset`, which inserts an asset of size 100 bytes into the World State database.
    chaincodeID: fixed-asset
    txDuration: 300
    rateControl: { type: fixed-backlog,  opts: { unfinished_per_client: 20, startingTps: 200} }
    arguments:
      chaincodeID: fixed-asset
      bytesize: 100
    callback: benchmarks/lib/create-asset.js
  - label: create-asset-500tps-100b
    description: Test a submitTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `createAsset`, which inserts an asset of size 100 bytes into the World State database.
    chaincodeID: fixed-asset
    txDuration: 300
    rateControl: { type: fixed-backlog,  opts: { unfinished_per_client: 20, startingTps: 500} }
    arguments:
      chaincodeID: fixed-asset
      bytesize: 100
    callback: benchmarks/lib/create-asset.js  
  - label: create-asset-1000tps-100b
    description: Test a submitTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `createAsset`, which inserts an asset of size 100 bytes into the World State database.
    chaincodeID: fixed-asset
    txDuration: 300
    rateControl: { type: fixed-backlog,  opts: { unfinished_per_client: 20, startingTps: 1000} }
    arguments:
      chaincodeID: fixed-asset
      bytesize: 100
    callback: benchmarks/lib/create-asset.js        
  - label: create-asset-200tps-250b
    description: Test a submitTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `createAsset`, which inserts an asset of size 100 bytes into the World State database.
    chaincodeID: fixed-asset
    txDuration: 300
    rateControl: { type: fixed-backlog,  opts: { unfinished_per_client: 20, startingTps: 200} }
    arguments:
      chaincodeID: fixed-asset
      bytesize: 250
    callback: benchmarks/lib/create-asset.js
  - label: create-asset-500tps-250b
    description: Test a submitTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `createAsset`, which inserts an asset of size 100 bytes into the World State database.
    chaincodeID: fixed-asset
    txDuration: 300
    rateControl: { type: fixed-backlog,  opts: { unfinished_per_client: 20, startingTps: 500} }
    arguments:
      chaincodeID: fixed-asset
      bytesize: 250
    callback: benchmarks/lib/create-asset.js  
  - label: create-asset-1000tps-250b
    description: Test a submitTransaction() Gateway method against the NodeJS `fixed-asset` Smart Contract method named `createAsset`, which inserts an asset of size 100 bytes into the World State database.
    chaincodeID: fixed-asset
    txDuration: 300
    rateControl: { type: fixed-backlog,  opts: { unfinished_per_client: 20, startingTps: 1000} }
    arguments:
      chaincodeID: fixed-asset
      bytesize: 250
    callback: benchmarks/lib/create-asset.js       

monitor:
  type: none
